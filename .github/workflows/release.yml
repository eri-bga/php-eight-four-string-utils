name: Release & Notify Packagist

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release & Update Packagist
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PACKAGIST_TOKEN: ${{ secrets.PACKAGIST_API_TOKEN }}
      PACKAGE_NAME: php-eight-four/string-utils

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install standard-version
        run: npm install --save-dev standard-version

      - name: Determine next version
        id: version
        run: |
          # Ensure git history is fully fetched
          git fetch --tags

          # Run dry-run to check for changes
          npx standard-version@latest --dry-run --skip.bump --skip.changelog --skip.commit --skip.tag > /tmp/version-output.txt

          # Extract version
          NEXT_VERSION=$(grep -oE 'new version for package .* is [0-9]+\.[0-9]+\.[0-9]+' /tmp/version-output.txt | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')

          if [ -z "$NEXT_VERSION" ]; then
            echo "No conventional commits found. Skipping release."
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
            exit 0
          else
            echo "New version detected: $NEXT_VERSION"
            echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Extract tag name
        if: env.HAS_CHANGES == 'true'
        id: vars
        run: |
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "tag=$TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.HAS_CHANGES == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          body: |
            ${{ steps.version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Notify Packagist
        if: env.HAS_CHANGES == 'true'
        run: |
          curl -X POST https://packagist.org/api/github  \
            -H "Content-Type: application/json" \
            -d '{"repository":{"url":"https://github.com/eri-bga/php-eight-four-string-utils.git "}}'
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}